<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>