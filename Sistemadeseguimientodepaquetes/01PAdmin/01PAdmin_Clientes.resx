<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAG8AAACACAYAAAAF1zc3AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAR5SURBVHhe7Z3BjhRVFIZbAdHEBKNIYnwEZcuGR9AH8CV0
        7ZKl7pnFwIbgyneQlSx8AbYkRjcCmhg1AQHl/2b6dA7FqUkDU9V1Mv+XfOnq2/cM0+dPdde9Q1IrY4wx
        xhhjjDHGGGOMMWYpvGEX49ackqcPD81CIA9yGYWE84Q35Tl5Xn5gZ5e+039yCMjnhTORgZh0SV6Xd+Q9
        +bvdmfSfHMiDXICcNgHGwTtyX/5vFyshkhNsAnxb3pJMeLz2qfzP7lxyiEzIh5zIa8Oe5IVHkoJI2i5H
        ciEfjq/KAy7Lf6VD6yE5kRe5rW5IBp+sH4cy+SirmmxVk61qslVNtqoJq/mdrN5T5ERuq7vrJ2OT7bKM
        nMjt4BQcTgj5snwg7xdyGfuHrOpCfjbzxur/lFVd+FAeVf+3rOrCf+RvsqpfuvSd/lfvC+lt+UIU/SI/
        ku9JFo7vr2UBySUrn7vDWoxT+yf5rsy1+KE8I7+QzBv+klH/vWR3gfm5/oLkUvlryby4Egvj+bcSmJ/r
        lyy9ot/0nf7zPsZCLAdj8s/yrITNukLEgv4TGTX5Yzea/6OEXAuxk/OZZN7wl4vm35Qw3BqK7bsvZZ4/
        rL8iodN2X/SKvtN/3scrhxeLwljZYzTzooyaKrzbEqjN9dHMzyXzxsL7TgJnadQiz+ErmecP6yO8t2Su
        X7JxYtD31w4vFoT84CD+gU9l1BwVXq6Fbc+8CO8knnn03eGJExveEj42mR+16I/NQ8vBHJ4vWOYlevXa
        FyzdlwrfSDhRS4WQIhaMsVDmMR+/7CI917N43maRnhfZw/q/ZFUX5kV61C7d+F15HAstLAdtD8vBLN9l
        R1nVZKuabFWTrWqyVU1Yze9k9Z6y5aDtYTloe1gOZqvT2c5jlUe2HLQ9LAdDLlWr/5Jm5/GVlgpR9Kv8
        WLJ4ZKHM4txOa2xI0Hf6n/MYWg7G5LHtMTMdx7Y9RnG1MW2n81g3pqs/CZnpiD5P9vc8Mx0OrzEOrzEO
        rzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEO
        rzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEO
        rzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzEOrzHHGp5vRzOvk98n3UxH9Hmy+6Tb
        6Xyp+6RzL/PqBaTogeSe3XZe6ftYaEhuq7vrJ9vco9Tu3siJ3FY31k+erB+H5hvQ2nmt8oicyG11WXIK
        jk22y5KcyIvcDtiTvPBIOsRlSi7kw/FVuYHL0h8kLzxey5clBXa3kkNkQj63ZGycbNYVLAr3ZSRtl+c1
        GZsmm3V3XtlfktflHXlPVvfvtvNI/8mB0MgFYqfrORg4dXh4AJPOSe7dzcLRzit9p/9xUgH5vBBchgmn
        Dw/NQiCPfGJtBSnb3WqMMcYYY4wxxhhjjDHGLIHV6hn9CFKwc6lDnQAAAABJRU5ErkJggg==
</value>
  </data>
</root>